{
  "title": "5 - Connecting our App to the Backend",
  "cells": [
    {
      "type": "text",
      "data": "<h3>Using Firebase to Store Data</h3>"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "npm install --save axios "
    },
    {
      "type": "text",
      "data": "/components/Admin/AdminPostForm.vue"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "<template>\n  <form @submit.prevent=\"onSave\">\n    <AppControlInput v-model=\"editedPost.author\">Author Name</AppControlInput>\n    <AppControlInput v-model=\"editedPost.title\">Title</AppControlInput>\n    <AppCantrolInput v-model=\"editedPost.thumbnailLink\">Thumbnail Link</AppCantrolInput>\n    <AppControlInput control-type=\"textarea\" v-model=\"editedPost.content\">Content</AppControlInput>\n    <AppButton type=\"submit\">Save</AppButton>\n    <AppButton type=\"button\" style=\"margin-left: 10px\" btn-style=\"cancel\" @click=\"onCancel\">Cancel</AppButton>\n  </form>\n</template>\n\n<script>\n  import AppControlInput from '@/components/UI/AppControlInput'\n  import AppButton from '@/components/UI/AppButton'\n\n\n  export default {\n    components: {\n      AppControlInput,\n      AppButton\n    },\n    props: {\n      post: {\n        type: Object,\n        required: false\n      }\n    },\n    data() {\n      return {\n        editedPost: this.post ? { ...this.post} : {\n          author: '',\n          title: '',\n          thumbnailLink: '',\n          content: ''\n        }\n      };\n    },\n    methods: {\n      onSave() {\n        // Save the post\n        this.$emit('submit', this.editedPost);\n      },\n      onCancel() {\n        // Navigate back\n        this.$router.push('/admin');\n      }\n    }\n  }\n</script>"
    },
    {
      "type": "text",
      "data": "/pages/posts/new-post/index.vue"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "<template>\n  <div class=\"admin-new-post-page\">\n    <section class=\"new-post-form\">\n      <AdminPostForm @submit=\"onSubmitted\"/>\n    </section>\n  </div>\n</template>\n\n<script>\n  import axios from 'axios'\n  import AdminPostForm from \"@/components/Admin/AdminPostForm\";\n\nexport default{\n  layout: 'admin',\n  components: {\n    AdminPostForm\n  },\n  methods: {\n    onSubmitted(postData) {\n      axios.post('https://nuxt-blog-e0eef.firebaseio.com/posts.json', postData)\n        .then(result => console.log(result))\n        .catch(e => console.log(e));\n    }\n  }\n};\n</script>\n\n<style scoped>\n  .new-post-form {\n    width: 90%;\n    margin: 20px auto;\n  }\n\n  @media (min-width: 768px) {\n    .new-post-form {\n      width: 500px;\n    }\n  }\n</style>"
    },
    {
      "type": "text",
      "data": "<h3>Fetching Data from the Backend</h3>"
    },
    {
      "type": "text",
      "data": "store/index.js"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "import Vuex from 'vuex';\nimport axios from 'axios';\n\n\nconst createStore = () => {\n  return new Vuex.Store({\n    state: {\n      loadedPosts:[]\n    },\n    mutations: {\n      setPosts(state, posts) {\n       state.loadedPosts = posts\n      }\n    },\n    actions: {\n      nuxtServerInit(vuexContext, context) {\n        return axios.get('https://nuxt-blog-e0eef.firebaseio.com/posts.json')\n          .then(res => {\n            const postsArray =[]\n            for (const key in res.data) {\n              postsArray.push( { ...res.data[key], id:key })\n            }\n            vuexContext.commit('setPosts', postsArray)\n          })\n          .catch(e => context.error(e));\n      },\n      setPosts(vuexContext, posts) {\n        vuexContext.commit('setPosts', posts)\n      }\n    },\n    getters: {\n      loadedPosts(state) {\n        return state.loadedPosts\n      }\n    }\n  });\n};\n\nexport default createStore;"
    },
    {
      "type": "text",
      "data": "<h3>Initializing Our Store</h3>"
    },
    {
      "type": "text",
      "data": "/components/Admin/AdminPostForm.vue"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "<template>\n  <form @submit.prevent=\"onSave\">\n    <AppControlInput v-model=\"editedPost.author\">Author Name</AppControlInput>\n    <AppControlInput v-model=\"editedPost.title\">Title</AppControlInput>\n    <AppControlInput v-model=\"editedPost.thumbnail\">Thumbnail Link</AppControlInput>\n    <AppControlInput control-type=\"textarea\" v-model=\"editedPost.content\">Content</AppControlInput>\n    <AppControlInput control-type=\"textarea\" v-model=\"editedPost.previewText\">Preview Text</AppControlInput>\n    <AppButton type=\"submit\">Save</AppButton>\n    <AppButton type=\"button\" style=\"margin-left: 10px\" btn-style=\"cancel\" @click=\"onCancel\">Cancel</AppButton>\n  </form>\n</template>\n\n<script>\n  import AppControlInput from '@/components/UI/AppControlInput'\n  import AppButton from '@/components/UI/AppButton'\n\n\n  export default {\n    components: {\n      AppControlInput,\n      AppButton\n    },\n    props: {\n      post: {\n        type: Object,\n        required: false\n      }\n    },\n    data() {\n      return {\n        editedPost: this.post ? { ...this.post} : {\n          author: '',\n          title: '',\n          thumbnail: '',\n          content: '',\n          previewText: ''\n        }\n      };\n    },\n    methods: {\n      onSave() {\n        // Save the post\n        this.$emit('submit', this.editedPost);\n      },\n      onCancel() {\n        // Navigate back\n        this.$router.push('/admin');\n      }\n    }\n  }\n</script>"
    },
    {
      "type": "text",
      "data": "<h3>Fetching all Posts</h3>"
    },
    {
      "type": "text",
      "data": "/pages/admin/new-post/index.vue"
    },
    {
      "type": "code",
      "language": "sh",
      "data": "<template>\n  <div class=\"admin-new-post-page\">\n    <section class=\"new-post-form\">\n      <AdminPostForm @submit=\"onSubmitted\"/>\n    </section>\n  </div>\n</template>\n\n<script>\n  import axios from 'axios'\n  import AdminPostForm from \"@/components/Admin/AdminPostForm\";\n\nexport default{\n  layout: 'admin',\n  components: {\n    AdminPostForm\n  },\n  methods: {\n    onSubmitted(postData) {\n      axios.post('https://nuxt-blog-e0eef.firebaseio.com/posts.json', {\n        ...postData,\n        updatedDate: new Date()\n      })\n        .then(result => console.log(result))\n        .catch(e => console.log(e));\n    }\n  }\n};\n</script>\n\n<style scoped>\n  .new-post-form {\n    width: 90%;\n    margin: 20px auto;\n  }\n\n  @media (min-width: 768px) {\n    .new-post-form {\n      width: 500px;\n    }\n  }\n</style>"
    },
    {
      "type": "text",
      "data": "/pages/posts/_id/index.vue"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "<template>\n    <div class=\"single-post-page\">\n        <section class=\"post\">\n            <h1 class=\"post-title\">{{ loadedPost.title }}</h1>\n            <div class=\"post-details\">\n                <div class=\"post-detail\">Last updated on {{ loadedPost.updatedDate }}</div>\n                <div class=\"post-detail\">Written by {{ loadedPost.author }}</div>\n            </div>\n            <p class=\"post-content\">{{ loadedPost.content }}</p>\n        </section>\n        <section class=\"post-feedback\">\n            <p>\n                Let me know what you think about the post, send a mail to <a href=\"mailto:feedback@my-awesome-domain.com\">feedback@my-awesome-domain.com</a>.\n            </p>\n        </section>\n    </div>\n</template>\n\n<script>\n  import axios from 'axios'\n\n  export default {\n    asyncData(context) {\n      return axios.get('https://nuxt-blog-e0eef.firebaseio.com/posts/' + context.params.id + '.json')\n        .then(res => {\n          return {\n            loadedPost: res.data\n          }\n        })\n        .catch(e => context.error(e))\n    }\n  }\n</script>\n\n<style scoped>\n.single-post-page {\n  padding: 30px;\n  text-align: center;\n  box-sizing: border-box;\n}\n\n.post {\n  width: 100%;\n}\n\n@media (min-width: 768px) {\n  .post {\n    width: 600px;\n    margin: auto;\n  }\n}\n\n.post-title {\n  margin: 0;\n}\n\n.post-details {\n  padding: 10px;\n  box-sizing: border-box;\n  border-bottom: 3px solid #ccc;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n}\n\n@media (min-width: 768px) {\n  .post-details {\n    flex-direction: row;\n  }\n}\n\n.post-detail {\n  color: rgb(88, 88, 88);\n  margin: 0 10px;\n}\n\n.post-feedback a {\n  color: red;\n  text-decoration: none;\n}\n\n.post-feedback a:hover,\n.post-feedback a:active {\n  color: salmon;\n}\n</style>"
    },
    {
      "type": "text",
      "data": "<h3>Editing Posts</h3>"
    },
    {
      "type": "text",
      "data": "/pages/admin/_postId/index.vue"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "<template>\n  <div class=\"admin-post-page\">\n    <section class=\"update-form\">\n      <AdminPostForm :post=\"loadedPost\" @submit=\"onSubmitted\"/>\n    </section>\n  </div>\n</template>\n\n<script>\nimport AdminPostForm from '@/components/Admin/AdminPostForm';\nimport axios from 'axios';\n\nexport default {\n  layout: 'admin',\n  components: {\n    AdminPostForm\n  },\n  asyncData(context) {\n    return axios\n      .get('https://nuxt-blog-e0eef.firebaseio.com/posts/' +\n      context.params.postId +\n      '.json')\n      .then(res => {\n        return {\n          loadedPost: res.data\n        }\n      })\n      .catch(e => context.error());\n  },\n  methods: {\n    onSubmitted(editedPost) {\n      axios.put('https://nuxt-blog-e0eef.firebaseio.com/posts/' +\n        this.$route.params.postId +\n        '.json', editedPost)\n        .then(res => {\n          this.$router.push('/admin')\n        })\n        .catch(e => console.log(e))\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .update-form {\n    width: 90%;\n    margin: 20px auto;\n  }\n\n  @media (min-width: 768px) {\n    .update-form {\n      width: 500px;\n    }\n  }\n</style>\n"
    },
    {
      "type": "text",
      "data": "/pages/admin/new-post/index.vue"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "<template>\n  <div class=\"admin-new-post-page\">\n    <section class=\"new-post-form\">\n      <AdminPostForm @submit=\"onSubmitted\"/>\n    </section>\n  </div>\n</template>\n\n<script>\n  import axios from 'axios'\n  import AdminPostForm from \"@/components/Admin/AdminPostForm\";\n\nexport default{\n  layout: 'admin',\n  components: {\n    AdminPostForm\n  },\n  methods: {\n    onSubmitted(postData) {\n      axios.post('https://nuxt-blog-e0eef.firebaseio.com/posts.json', {\n        ...postData,\n        updatedDate: new Date()\n      })\n        .then(result => {\n          this.$router.push('/admin')\n        })\n        .catch(e => console.log(e));\n    }\n  }\n};\n</script>\n\n<style scoped>\n  .new-post-form {\n    width: 90%;\n    margin: 20px auto;\n  }\n\n  @media (min-width: 768px) {\n    .new-post-form {\n      width: 500px;\n    }\n  }\n</style>\n"
    },
    {
      "type": "text",
      "data": "/pages/admin/index.vue"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "<template>\n  <div class=\"admin-page\">\n    <section class=\"new-post\">\n      <AppButton @click=\"$router.push('/admin/new-post')\">Create Post</AppButton>\n    </section>\n    <section class=\"existing-posts\">\n      <h1>Existing Posts</h1>\n      <PostList isAdmin :posts=\"loadedPosts\"/>\n    </section>\n  </div>\n</template>\n\n<script>\n  import PostList from '@/components/Posts/PostList'\n  import AppButton from '@/components/UI/AppButton'\n\n  export default {\n    layout: 'admin',\n    components: {\n      PostList,\n      AppButton\n    },\n    computed: {\n      loadedPosts() {\n        return this.$store.getters.loadedPosts\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .admin-page {\n    padding: 20px;\n  }\n\n  .new-post {\n    text-align: center;\n    border-bottom: 2px solid #ccc;\n    padding-bottom: 10px;\n  }\n\n  .existing-posts h1 {\n    text-align: center;\n  }\n</style>"
    },
    {
      "type": "text",
      "data": ""
    },
    {
      "type": "text",
      "data": ""
    },
    {
      "type": "text",
      "data": ""
    },
    {
      "type": "text",
      "data": ""
    }
  ]
}